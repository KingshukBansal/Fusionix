name: Deploy Backend Microservices

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build-and-deploy-backend:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the Repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Step 2: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Step 3: Determine Changed Files
    - name: Get Changed Services
      id: changes
      run: |
        # Determine the previous commit or fallback for the first commit
        if git rev-parse HEAD^ >/dev/null 2>&1; then
          # Get changes between HEAD and the previous commit
          services=$(git diff --name-only HEAD^ HEAD | grep '^word-to-pdf-converter-backend/' | cut -d'/' -f2 | uniq)
        else
          echo "No previous commit found. Assuming first commit."
          # Include all services as "changed" on the first commit
          services=$(ls word-to-pdf-converter-backend)
        fi

        # Output the modified services
        echo "services=$services" >> $GITHUB_ENV
        echo "Modified services: $services"
      shell: bash



    # Step 4: Build and Push Docker Images for Changed Services
    - name: Build and Push Changed Images
      if: env.services
      run: |
        cd word-to-pdf-converter-backend
        for service in $services; do
          echo "Building and pushing $service..."
          docker build -t ${{ secrets.DOCKER_USERNAME }}/rapidfort-$service:latest $service
          docker push ${{ secrets.DOCKER_USERNAME }}/rapidfort-$service:latest
        done

    # Step 5: Deploy Changed Services to Minikube on EC2
    - name: Deploy Changed Services
      if: env.services
      run: |
        ssh -o StrictHostKeyChecking=no -i /tmp/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} << EOF
          echo "Applying Kubernetes manifests..."
          cd word-to-pdf-converter-backend
          for service in $services; do
            kubectl apply -f $service/manifest
          done
        EOF

    # Step 6: Add SSH Key for EC2 Access
    - name: Add SSH Key
      run: |
        echo "${{ secrets.SSH_KEY }}" | base64 --decode > /tmp/id_rsa
        chmod 600 /tmp/id_rsa
